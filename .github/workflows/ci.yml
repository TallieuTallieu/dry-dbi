name: Continuous Integration

on:
  push:
    branches: 
      - main
      - develop
      - 'feature/**'
      - 'feat/**'
      - 'bug/**'
      - 'fix/**'
      - 'hotfix/**'
      - 'patch/**'
      - 'bugfix/**'
      - 'breaking/**'
      - 'major/**'
      - 'break/**'
      - 'bc-break/**'
      - 'breaking-change/**'
      - 'enhancement/**'
      - 'improve/**'
      - 'add/**'
      - 'update/**'
      - 'chore/**'
      - 'release/**'
  pull_request:
    branches: 
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
    
    name: PHP ${{ matrix.php-version }} Tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Validate composer.json
        run: composer validate --strict

      - name: Check code style (if available)
        continue-on-error: true
        run: |
          if [ -f "vendor/bin/php-cs-fixer" ]; then
            vendor/bin/php-cs-fixer fix --dry-run --diff
          else
            echo "PHP CS Fixer not available, skipping code style check"
          fi

      - name: Run static analysis (if available)
        continue-on-error: true
        run: |
          if [ -f "vendor/bin/phpstan" ]; then
            vendor/bin/phpstan analyse
          else
            echo "PHPStan not available, skipping static analysis"
          fi

      - name: Run tests
        run: |
          if [ -f "vendor/bin/pest" ]; then
            echo "Running Pest tests..."
            vendor/bin/pest --coverage-text
          elif [ -f "vendor/bin/phpunit" ]; then
            echo "Running PHPUnit tests..."
            vendor/bin/phpunit --coverage-text
          else
            echo "No test runner found"
            exit 1
          fi

  security:
    runs-on: ubuntu-latest
    name: Security Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Security check
        run: |
          if [ -f "vendor/bin/security-checker" ]; then
            vendor/bin/security-checker security:check
          else
            echo "Security checker not available, using composer audit"
            composer audit || echo "Composer audit not available in this version"
          fi